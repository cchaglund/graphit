{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/Pie.jsx\";\nimport React, { useState } from 'react';\nimport PieChart from '../components/PieChart';\nimport styled from '@emotion/styled';\n\nconst Pie = ({\n  fields\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        barsColor = _useState4[0],\n        setBarsColor = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        padding = _useState6[0],\n        setPadding = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        barThickness = _useState8[0],\n        setBarThickness = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        backgroundColor = _useState10[0],\n        setBackgroundColor = _useState10[1];\n\n  const _useState11 = useState(),\n        _useState12 = _slicedToArray(_useState11, 2),\n        textColor = _useState12[0],\n        setTextColor = _useState12[1];\n\n  const StyledRow = styled.div`\n        margin: auto;\n        width: ${width}px;\n        display: flex;\n        flex-direction: column;\n        align-items: space-between;\n        padding: 1rem;\n    `;\n\n  const backgroundColorChangeHandler = e => {\n    const color = e.target.value;\n    setBackgroundColor(color);\n  }; // if (color.length === 6) {\n  //         console.log('setting', color)\n  //         setTextColor(e.target.value)\n  //     }\n\n\n  const textColorChangeHandler = e => {\n    const color = e.target.value;\n    setTextColor(color);\n  };\n\n  const barsColorChangeHandler = e => {\n    const color = e.target.value;\n    setBarsColor(color);\n  };\n\n  const paddingChangeHandler = e => {\n    const padd = e.target.value;\n    setPadding(padd);\n  };\n\n  const titleChangeHandler = e => {\n    const title = e.target.value;\n    setTitle(title);\n  };\n\n  const barThicknessChangeHandler = e => {\n    const value = e.target.value;\n    setBarThickness(parseInt(value));\n  };\n\n  return React.createElement(PieChart, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n};\n\nexport default Pie;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/Pie.jsx"],"names":["React","useState","PieChart","styled","Pie","fields","title","setTitle","barsColor","setBarsColor","padding","setPadding","barThickness","setBarThickness","backgroundColor","setBackgroundColor","textColor","setTextColor","StyledRow","div","width","backgroundColorChangeHandler","e","color","target","value","textColorChangeHandler","barsColorChangeHandler","paddingChangeHandler","padd","titleChangeHandler","barThicknessChangeHandler","parseInt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA,oBACIJ,QAAQ,EADZ;AAAA;AAAA,QAChBK,KADgB;AAAA,QACTC,QADS;;AAAA,qBAEYN,QAAQ,EAFpB;AAAA;AAAA,QAEhBO,SAFgB;AAAA,QAELC,YAFK;;AAAA,qBAGQR,QAAQ,EAHhB;AAAA;AAAA,QAGhBS,OAHgB;AAAA,QAGPC,UAHO;;AAAA,qBAIkBV,QAAQ,EAJ1B;AAAA;AAAA,QAIhBW,YAJgB;AAAA,QAIFC,eAJE;;AAAA,qBAKwBZ,QAAQ,EALhC;AAAA;AAAA,QAKhBa,eALgB;AAAA,QAKCC,kBALD;;AAAA,sBAMYd,QAAQ,EANpB;AAAA;AAAA,QAMhBe,SANgB;AAAA,QAMLC,YANK;;AAQxB,QAAMC,SAAS,GAAGf,MAAM,CAACgB,GAAI;;iBAEhBC,KAAM;;;;;KAFnB;;AASA,QAAMC,4BAA4B,GAAIC,CAAD,IAAO;AACxC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAV,IAAAA,kBAAkB,CAACQ,KAAD,CAAlB;AACH,GAHD,CAjBwB,CAqBxB;AACA;AACA;AACA;;;AAEA,QAAMG,sBAAsB,GAAIJ,CAAD,IAAO;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAR,IAAAA,YAAY,CAACM,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAMI,sBAAsB,GAAIL,CAAD,IAAO;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAhB,IAAAA,YAAY,CAACc,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAMK,oBAAoB,GAAIN,CAAD,IAAO;AAChC,UAAMO,IAAI,GAAGP,CAAC,CAACE,MAAF,CAASC,KAAtB;AACAd,IAAAA,UAAU,CAACkB,IAAD,CAAV;AACH,GAHD;;AAKA,QAAMC,kBAAkB,GAAIR,CAAD,IAAO;AAC9B,UAAMhB,KAAK,GAAGgB,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAlB,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAHD;;AAKA,QAAMyB,yBAAyB,GAAIT,CAAD,IAAO;AACrC,UAAMG,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAZ,IAAAA,eAAe,CAACmB,QAAQ,CAACP,KAAD,CAAT,CAAf;AACH,GAHD;;AAKA,SACI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEpB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAGH,CAtDD;;AAwDA,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport PieChart from '../components/PieChart';\nimport styled from '@emotion/styled';\n\nconst Pie = ({ fields }) => {\n    const [ title, setTitle ] = useState();\n    const [ barsColor, setBarsColor ] = useState();\n    const [ padding, setPadding ] = useState();\n    const [ barThickness, setBarThickness ] = useState();\n    const [ backgroundColor, setBackgroundColor ] = useState();\n    const [ textColor, setTextColor ] = useState();\n\n    const StyledRow = styled.div`\n        margin: auto;\n        width: ${width}px;\n        display: flex;\n        flex-direction: column;\n        align-items: space-between;\n        padding: 1rem;\n    `;  \n\n    const backgroundColorChangeHandler = (e) => {\n        const color = e.target.value;\n        setBackgroundColor(color)\n    }\n    // if (color.length === 6) {\n    //         console.log('setting', color)\n    //         setTextColor(e.target.value)\n    //     }\n\n    const textColorChangeHandler = (e) => {\n        const color = e.target.value;\n        setTextColor(color)\n    }\n\n    const barsColorChangeHandler = (e) => {\n        const color = e.target.value;\n        setBarsColor(color)\n    }\n\n    const paddingChangeHandler = (e) => {\n        const padd = e.target.value;\n        setPadding(padd)\n    }\n\n    const titleChangeHandler = (e) => {\n        const title = e.target.value;\n        setTitle(title)\n    }\n\n    const barThicknessChangeHandler = (e) => {\n        const value = e.target.value;\n        setBarThickness(parseInt(value))\n    }\n\n    return(\n        <PieChart fields={fields}/>\n    );\n}\n\nexport default Pie;"]},"metadata":{},"sourceType":"module"}