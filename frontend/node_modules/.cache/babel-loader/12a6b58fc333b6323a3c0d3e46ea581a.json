{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/GraphOverview.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Rectangle from '../components/Rectangle';\nimport Bar from './Bar';\nimport Pie from './Pie';\nimport styled from '@emotion/styled';\nconst winWidth = window.innerWidth;\nconst width = winWidth * 0.75; // var winHeight = window.innerHeight;\n\nconst StyledRow = styled.div`\n    margin: auto;\n    width: ${width}px;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    padding: 1rem;\n`;\n\nconst GraphOverview = ({\n  location\n}) => {\n  // const [ expandedState, setExpandedState ] = useState(false);\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        barChartActive = _useState2[0],\n        setBarChartActive = _useState2[1];\n\n  const chartSwitchHandler = () => {\n    setBarChartActive(!barChartActive);\n  };\n\n  const fields = location.state;\n  let charCount = 0;\n  Object.keys(fields).forEach(key => {\n    if (key.length > charCount) charCount = key.length;\n  });\n  return React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Graph Overview\"), React.createElement(\"h4\", {\n    onClick: chartSwitchHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Switch to pie chart\"), barChartActive ? React.createElement(Bar, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }) : React.createElement(Pie, {\n    fields: fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default withRouter(GraphOverview);","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/GraphOverview.jsx"],"names":["React","useState","useEffect","withRouter","Rectangle","Bar","Pie","styled","winWidth","window","innerWidth","width","StyledRow","div","GraphOverview","location","barChartActive","setBarChartActive","chartSwitchHandler","fields","state","charCount","Object","keys","forEach","key","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAxB;AACA,MAAMC,KAAK,GAAGH,QAAQ,GAAG,IAAzB,C,CACA;;AAEA,MAAMI,SAAS,GAAGL,MAAM,CAACM,GAAI;;aAEfF,KAAM;;;;;CAFpB;;AASA,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC;AADoC,oBAEUd,QAAQ,CAAC,IAAD,CAFlB;AAAA;AAAA,QAE5Be,cAF4B;AAAA,QAEZC,iBAFY;;AAIpC,QAAMC,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACH,GAFD;;AAIA,QAAMG,MAAM,GAAGJ,QAAQ,CAACK,KAAxB;AAEA,MAAIC,SAAS,GAAG,CAAhB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,OAApB,CAA6BC,GAAG,IAAI;AAChC,QAAIA,GAAG,CAACC,MAAJ,GAAaL,SAAjB,EAA4BA,SAAS,GAAGI,GAAG,CAACC,MAAhB;AAC/B,GAFD;AAIA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAI,IAAA,OAAO,EAAER,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,EAIQF,cAAc,GAEd,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAEG,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFc,GAId,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAEA,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARR,CADJ;AAiBH,CAhCD;;AAkCA,eAAehB,UAAU,CAACW,aAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport Rectangle from '../components/Rectangle';\nimport Bar from './Bar';\nimport Pie from './Pie';\nimport styled from '@emotion/styled';\n\n\nconst winWidth = window.innerWidth;\nconst width = winWidth * 0.75;\n// var winHeight = window.innerHeight;\n\nconst StyledRow = styled.div`\n    margin: auto;\n    width: ${ width}px;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    padding: 1rem;\n`;\n\nconst GraphOverview = ({ location }) => {\n    // const [ expandedState, setExpandedState ] = useState(false);\n    const [ barChartActive, setBarChartActive ] = useState(true);\n\n    const chartSwitchHandler = () => {\n        setBarChartActive(!barChartActive)\n    }\n\n    const fields = location.state\n\n    let charCount = 0;\n    Object.keys(fields).forEach( key => {\n        if (key.length > charCount) charCount = key.length;\n    });\n\n    return (\n        <StyledRow>\n            <h3>Graph Overview</h3>\n            <h4 onClick={chartSwitchHandler}>Switch to pie chart</h4>\n            { \n                barChartActive\n                ?\n                <Bar fields={fields} />\n                : \n                <Pie fields={fields} />\n            }\n            {/* <Rectangle\n                show={ true }\n                width={ winWidth }\n                height={ true ? 200 : 0 } /> */}\n        </StyledRow>\n    )\n}\n\nexport default withRouter(GraphOverview);"]},"metadata":{},"sourceType":"module"}