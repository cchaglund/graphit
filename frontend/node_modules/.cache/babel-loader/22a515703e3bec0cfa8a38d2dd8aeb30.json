{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/DataEntryMethod.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from \"d3\";\nimport { Link } from \"react-router-dom\";\nvar winWidth = window.innerWidth;\nvar winHeight = window.innerHeight;\nconst StyledDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    padding-top: 1rem;\n`;\n\nconst DataEntryMethod = ({\n  name\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expandedState = _useState2[0],\n        setExpandedState = _useState2[1];\n\n  const svgRef = React.createRef();\n  const secRef = React.createRef();\n  useEffect(() => {// let section = d3.select(secRef.current);\n    // section.transition()\n    //     .duration(1000)\n    //     .ease(d3.easeBackInOut)\n    //     .attr('x', 200)\n  }, []);\n\n  const toggleExpand = () => {\n    // expandedState ? contractSvg() : expandSvg();\n    let svg = d3.select(svgRef.current);\n    svg.transition().duration(300).ease(d3.easeBackInOut).attr('height', expandedState ? 0 : 200);\n    let section = d3.select(secRef.current);\n    section.transition().duration(300).ease(d3.easeBackInOut).attr('height', expandedState ? 0 : 200);\n    setExpandedState(!expandedState);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(StyledDiv, {\n    onClick: () => toggleExpand(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, name), React.createElement(\"svg\", {\n    width: winWidth,\n    height: 0,\n    ref: svgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    height: 0,\n    width: winWidth,\n    fill: '#575757',\n    ref: secRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nexport default DataEntryMethod;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/DataEntryMethod.jsx"],"names":["React","useState","useEffect","styled","d3","Link","winWidth","window","innerWidth","winHeight","innerHeight","StyledDiv","div","DataEntryMethod","name","expandedState","setExpandedState","svgRef","createRef","secRef","toggleExpand","svg","select","current","transition","duration","ease","easeBackInOut","attr","section"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,UAAtB;AACA,IAAIC,SAAS,GAAGF,MAAM,CAACG,WAAvB;AAEA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;;;;CAA7B;;AAMA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,oBACUb,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,QAC1Bc,aAD0B;AAAA,QACXC,gBADW;;AAElC,QAAMC,MAAM,GAAGjB,KAAK,CAACkB,SAAN,EAAf;AACA,QAAMC,MAAM,GAAGnB,KAAK,CAACkB,SAAN,EAAf;AAEAhB,EAAAA,SAAS,CAAC,MAAM,CACZ;AAEA;AACA;AACA;AACA;AAEH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMkB,YAAY,GAAG,MAAM;AACvB;AACA,QAAIC,GAAG,GAAGjB,EAAE,CAACkB,MAAH,CAAUL,MAAM,CAACM,OAAjB,CAAV;AAEAF,IAAAA,GAAG,CAACG,UAAJ,GACKC,QADL,CACc,GADd,EAEKC,IAFL,CAEUtB,EAAE,CAACuB,aAFb,EAGKC,IAHL,CAGU,QAHV,EAGoBb,aAAa,GAAG,CAAH,GAAO,GAHxC;AAKA,QAAIc,OAAO,GAAGzB,EAAE,CAACkB,MAAH,CAAUH,MAAM,CAACI,OAAjB,CAAd;AAEAM,IAAAA,OAAO,CAACL,UAAR,GACKC,QADL,CACc,GADd,EAEKC,IAFL,CAEUtB,EAAE,CAACuB,aAFb,EAGKC,IAHL,CAGU,QAHV,EAGoBb,aAAa,GAAG,CAAH,GAAO,GAHxC;AAKAC,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACH,GAjBD;;AAmBA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAG,MAAMK,YAAY,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IADL,CADJ,EAII;AAAK,IAAA,KAAK,EAAER,QAAZ;AAAsB,IAAA,MAAM,EAAE,CAA9B;AAAiC,IAAA,GAAG,EAAEW,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,CAAC,EAAE,CADP;AAEI,IAAA,CAAC,EAAE,CAFP;AAGI,IAAA,MAAM,EAAE,CAHZ;AAII,IAAA,KAAK,EAAEX,QAJX;AAKI,IAAA,IAAI,EAAE,SALV;AAMI,IAAA,GAAG,EAAEa,MANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAJJ,CADJ;AAkBH,CApDD;;AAsDA,eAAeN,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from \"d3\";\nimport { Link } from \"react-router-dom\";\n\nvar winWidth = window.innerWidth;\nvar winHeight = window.innerHeight;\n\nconst StyledDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    padding-top: 1rem;\n`;\n\nconst DataEntryMethod = ({ name }) => {\n    const [ expandedState, setExpandedState ] = useState(false);\n    const svgRef = React.createRef();\n    const secRef = React.createRef();\n\n    useEffect(() => {\n        // let section = d3.select(secRef.current);\n\n        // section.transition()\n        //     .duration(1000)\n        //     .ease(d3.easeBackInOut)\n        //     .attr('x', 200)\n\n    }, [])\n\n    const toggleExpand = () => {\n        // expandedState ? contractSvg() : expandSvg();\n        let svg = d3.select(svgRef.current);\n\n        svg.transition()\n            .duration(300)\n            .ease(d3.easeBackInOut)\n            .attr('height', expandedState ? 0 : 200)\n\n        let section = d3.select(secRef.current);\n\n        section.transition()\n            .duration(300)\n            .ease(d3.easeBackInOut)\n            .attr('height', expandedState ? 0 : 200)\n\n        setExpandedState(!expandedState)\n    }\n\n    return(\n        <div>\n            <StyledDiv onClick={ () => toggleExpand()}>\n                {name}\n            </StyledDiv>\n            <svg width={winWidth} height={0} ref={svgRef}>\n                <g>\n                    <rect \n                        x={0} \n                        y={0} \n                        height={0} \n                        width={winWidth} \n                        fill={'#575757'}\n                        ref={secRef}></rect>\n                </g>\n            </svg>\n        </div>\n    )\n}\n\nexport default DataEntryMethod;"]},"metadata":{},"sourceType":"module"}