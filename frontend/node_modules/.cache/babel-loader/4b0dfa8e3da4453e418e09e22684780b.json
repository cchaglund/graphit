{"ast":null,"code":"var _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/Graph.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport * as d3 from \"d3\";\nimport \"d3-selection-multi\";\n\nconst Graph = ({\n  fields,\n  width\n}) => {\n  const svgRef = React.createRef();\n  const recRef = React.createRef();\n  const gRef = React.createRef(); // const [ height, setHeight ] = useState(props.height);\n\n  useEffect(() => {\n    const dataDomain = Object.keys(fields).map(field => {\n      return parseInt(fields[field]);\n    });\n    const xScale = d3.scaleLinear().domain([0, d3.max(dataDomain)]).range([0, width]);\n    let svg = d3.select(svgRef.current).style('display', 'block').attrs({\n      height: dataDomain.length * 30\n    });\n    let g = d3.select(gRef.current);\n    console.log(fields);\n    g.selectAll('rect').data(Object.keys(fields), d => d).enter().append('rect').attrs({\n      x: 20,\n      y: (d, i) => 25 * i,\n      height: 20,\n      width: d => xScale(fields[d]),\n      fill: 'blue'\n    });\n    g.selectAll('text').data(Object.keys(fields), d => d).enter().append('text').text(d => d).attrs({\n      x: 0,\n      y: (d, i) => 25 * i + 17,\n      height: 20\n    }); // svg.transition()\n    //     .duration(300)\n    //     .ease(d3.easeBackInOut)\n    //     .attr('height', props.height)\n    // let section = d3.select(recRef.current);\n    // section.transition()\n    //     .duration(300)\n    //     .ease(d3.easeBackInOut)\n    //     .attr('height', props.height)\n    //     .on(\"end\", () =>\n    //         setHeight(props.height)\n    //     );\n  });\n  return React.createElement(\"svg\", {\n    ref: svgRef,\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: gRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }));\n};\n\nexport default Graph;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/Graph.jsx"],"names":["React","useEffect","useState","d3","Graph","fields","width","svgRef","createRef","recRef","gRef","dataDomain","Object","keys","map","field","parseInt","xScale","scaleLinear","domain","max","range","svg","select","current","style","attrs","height","length","g","console","log","selectAll","data","d","enter","append","x","y","i","fill","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,oBAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA;AAAT,CAAD,KAAqB;AAC/B,QAAMC,MAAM,GAAGP,KAAK,CAACQ,SAAN,EAAf;AACA,QAAMC,MAAM,GAAGT,KAAK,CAACQ,SAAN,EAAf;AACA,QAAME,IAAI,GAAGV,KAAK,CAACQ,SAAN,EAAb,CAH+B,CAK/B;;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYR,MAAZ,EAAoBS,GAApB,CAAyBC,KAAK,IAAI;AACjD,aAAOC,QAAQ,CAACX,MAAM,CAACU,KAAD,CAAP,CAAf;AACH,KAFkB,CAAnB;AAIA,UAAME,MAAM,GAAGd,EAAE,CAACe,WAAH,GACVC,MADU,CACH,CAAE,CAAF,EAAKhB,EAAE,CAACiB,GAAH,CAAOT,UAAP,CAAL,CADG,EAEVU,KAFU,CAEJ,CAAE,CAAF,EAAKf,KAAL,CAFI,CAAf;AAIA,QAAIgB,GAAG,GAAGnB,EAAE,CAACoB,MAAH,CAAUhB,MAAM,CAACiB,OAAjB,EACLC,KADK,CACC,SADD,EACY,OADZ,EAELC,KAFK,CAEC;AACHC,MAAAA,MAAM,EAAEhB,UAAU,CAACiB,MAAX,GAAoB;AADzB,KAFD,CAAV;AAMA,QAAIC,CAAC,GAAG1B,EAAE,CAACoB,MAAH,CAAUb,IAAI,CAACc,OAAf,CAAR;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAY1B,MAAZ;AAEAwB,IAAAA,CAAC,CAACG,SAAF,CAAY,MAAZ,EACKC,IADL,CACUrB,MAAM,CAACC,IAAP,CAAYR,MAAZ,CADV,EAC+B6B,CAAC,IAAIA,CADpC,EAEKC,KAFL,GAEaC,MAFb,CAEoB,MAFpB,EAGKV,KAHL,CAGW;AACHW,MAAAA,CAAC,EAAE,EADA;AAEHC,MAAAA,CAAC,EAAE,CAACJ,CAAD,EAAIK,CAAJ,KAAU,KAAKA,CAFf;AAGHZ,MAAAA,MAAM,EAAE,EAHL;AAIHrB,MAAAA,KAAK,EAAE4B,CAAC,IAAIjB,MAAM,CAACZ,MAAM,CAAC6B,CAAD,CAAP,CAJf;AAKHM,MAAAA,IAAI,EAAE;AALH,KAHX;AAWAX,IAAAA,CAAC,CAACG,SAAF,CAAY,MAAZ,EACKC,IADL,CACUrB,MAAM,CAACC,IAAP,CAAYR,MAAZ,CADV,EAC+B6B,CAAC,IAAIA,CADpC,EAEKC,KAFL,GAEaC,MAFb,CAEoB,MAFpB,EAGKK,IAHL,CAGUP,CAAC,IAAIA,CAHf,EAIKR,KAJL,CAIW;AACHW,MAAAA,CAAC,EAAE,CADA;AAEHC,MAAAA,CAAC,EAAE,CAACJ,CAAD,EAAIK,CAAJ,KAAW,KAAKA,CAAN,GAAW,EAFrB;AAGHZ,MAAAA,MAAM,EAAE;AAHL,KAJX,EA9BY,CAwCZ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GArDQ,CAAT;AAuDA,SACI;AAAK,IAAA,GAAG,EAAGpB,MAAX;AAAoB,IAAA,KAAK,EAAED,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,GAAG,EAAGI,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH,CA3ED;;AA6EA,eAAeN,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as d3 from \"d3\";\nimport \"d3-selection-multi\";\n\nconst Graph = ({fields, width}) => {\n    const svgRef = React.createRef();\n    const recRef = React.createRef();\n    const gRef = React.createRef();\n\n    // const [ height, setHeight ] = useState(props.height);\n\n    useEffect(() => {\n        const dataDomain = Object.keys(fields).map( field => {\n            return parseInt(fields[field]);\n        })\n\n        const xScale = d3.scaleLinear()\n            .domain([ 0, d3.max(dataDomain)])\n            .range([ 0, width])\n\n        let svg = d3.select(svgRef.current)\n            .style('display', 'block')\n            .attrs({\n                height: dataDomain.length * 30\n            })\n        \n        let g = d3.select(gRef.current)\n\n        console.log(fields)\n\n        g.selectAll('rect')\n            .data(Object.keys(fields), d => d)\n            .enter().append('rect')\n            .attrs({\n                x: 20,\n                y: (d, i) => 25 * i,\n                height: 20,\n                width: d => xScale(fields[d]),\n                fill: 'blue'\n            })\n\n        g.selectAll('text')\n            .data(Object.keys(fields), d => d)\n            .enter().append('text')\n            .text(d => d)\n            .attrs({\n                x: 0,\n                y: (d, i) => (25 * i) + 17,\n                height: 20,\n            })\n\n        // svg.transition()\n        //     .duration(300)\n        //     .ease(d3.easeBackInOut)\n        //     .attr('height', props.height)\n\n        // let section = d3.select(recRef.current);\n        // section.transition()\n        //     .duration(300)\n        //     .ease(d3.easeBackInOut)\n        //     .attr('height', props.height)\n        //     .on(\"end\", () =>\n        //         setHeight(props.height)\n        //     );\n    })\n\n    return(\n        <svg ref={ svgRef } width={width}>\n            <g ref={ gRef }>\n                {/* <rect\n                    ref={recRef}\n                    x={0} \n                    y={0} \n                    height={ height } \n                    width={ props.width } \n                    fill={'#575757'} /> */}\n            </g>\n        </svg>\n    )\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}