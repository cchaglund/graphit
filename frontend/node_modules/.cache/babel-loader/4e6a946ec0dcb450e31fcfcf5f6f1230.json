{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/Pie.jsx\";\nimport React, { useState } from 'react';\nimport PieChart from '../components/PieChart';\nimport styled from '@emotion/styled';\n\nconst Pie = ({\n  fields,\n  width,\n  charCount\n}) => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        slicesColor = _useState4[0],\n        setSliceColor = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        padding = _useState6[0],\n        setPadding = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        sectionRoundness = _useState8[0],\n        setSectionRoundness = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        backgroundColor = _useState10[0],\n        setBackgroundColor = _useState10[1];\n\n  const _useState11 = useState(),\n        _useState12 = _slicedToArray(_useState11, 2),\n        textColor = _useState12[0],\n        setTextColor = _useState12[1];\n\n  const _useState13 = useState(),\n        _useState14 = _slicedToArray(_useState13, 2),\n        innerRadius = _useState14[0],\n        setInnerRadius = _useState14[1];\n\n  const _useState15 = useState(),\n        _useState16 = _slicedToArray(_useState15, 2),\n        outerRadius = _useState16[0],\n        setOuterRadius = _useState16[1];\n\n  const StyledRow = styled.div`\n        margin: auto;\n        width: ${props => props.width}px;\n        display: flex;\n        flex-direction: column;\n        align-items: space-between;\n        padding: 1rem;\n    `;\n\n  const backgroundColorChangeHandler = e => {\n    const color = e.target.value;\n    setBackgroundColor(color);\n  }; // if (color.length === 6) {\n  //         console.log('setting', color)\n  //         setTextColor(e.target.value)\n  //     }\n\n\n  const textColorChangeHandler = e => {\n    const color = e.target.value;\n    setTextColor(color);\n  };\n\n  const sliceColorChangeHandler = e => {\n    const color = e.target.value;\n    setSliceColor(color);\n  };\n\n  const paddingChangeHandler = e => {\n    const padd = e.target.value;\n    setPadding(padd);\n  };\n\n  const titleChangeHandler = e => {\n    const title = e.target.value;\n    setTitle(title);\n  };\n\n  const sectionRoundnessChangeHandler = e => {\n    const value = e.target.value;\n    setSectionRoundness(parseInt(value));\n  };\n\n  const outerRadiusChangeHandler = e => {\n    const value = e.target.value;\n    setOuterRadius(parseInt(value));\n  };\n\n  const innerRadiusChangeHandler = e => {\n    const value = e.target.value;\n    setInnerRadius(parseInt(value));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(PieChart, {\n    fields: fields,\n    title: title,\n    padding: padding || 25,\n    innerRadius: innerRadius || 50,\n    outerRadius: outerRadius || 100,\n    width: width,\n    labelCharLength: charCount,\n    sectionRoundness: sectionRoundness || 20,\n    backgroundColor: backgroundColor || '000000',\n    textColor: textColor || 'FA8072',\n    slicesColor: slicesColor || 'FA8072',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Header\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    value: title,\n    onChange: titleChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Chart background color\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Hex value\",\n    value: backgroundColor,\n    onChange: backgroundColorChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Text color\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Hex value\",\n    value: textColor,\n    onChange: textColorChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Slice colors\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Hex value\",\n    value: slicesColor,\n    onChange: sliceColorChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Padding between slices\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Pixel value\",\n    value: padding,\n    onChange: paddingChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Section roundness\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Pixel value\",\n    value: sectionRoundness,\n    onChange: sectionRoundnessChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Circle outer radius size\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Pixel value\",\n    value: outerRadius,\n    onChange: outerRadiusChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"Inner circle radius\"), React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Pixel value\",\n    value: innerRadius,\n    onChange: innerRadiusChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }))));\n};\n\nexport default Pie;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/Pie.jsx"],"names":["React","useState","PieChart","styled","Pie","fields","width","charCount","title","setTitle","slicesColor","setSliceColor","padding","setPadding","sectionRoundness","setSectionRoundness","backgroundColor","setBackgroundColor","textColor","setTextColor","innerRadius","setInnerRadius","outerRadius","setOuterRadius","StyledRow","div","props","backgroundColorChangeHandler","e","color","target","value","textColorChangeHandler","sliceColorChangeHandler","paddingChangeHandler","padd","titleChangeHandler","sectionRoundnessChangeHandler","parseInt","outerRadiusChangeHandler","innerRadiusChangeHandler"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAAkC;AAAA,oBACdN,QAAQ,EADM;AAAA;AAAA,QAClCO,KADkC;AAAA,QAC3BC,QAD2B;;AAAA,qBAEHR,QAAQ,EAFL;AAAA;AAAA,QAElCS,WAFkC;AAAA,QAErBC,aAFqB;;AAAA,qBAGVV,QAAQ,EAHE;AAAA;AAAA,QAGlCW,OAHkC;AAAA,QAGzBC,UAHyB;;AAAA,qBAIQZ,QAAQ,EAJhB;AAAA;AAAA,QAIlCa,gBAJkC;AAAA,QAIhBC,mBAJgB;;AAAA,qBAKMd,QAAQ,EALd;AAAA;AAAA,QAKlCe,eALkC;AAAA,QAKjBC,kBALiB;;AAAA,sBAMNhB,QAAQ,EANF;AAAA;AAAA,QAMlCiB,SANkC;AAAA,QAMvBC,YANuB;;AAAA,sBAOFlB,QAAQ,EAPN;AAAA;AAAA,QAOlCmB,WAPkC;AAAA,QAOrBC,cAPqB;;AAAA,sBAQFpB,QAAQ,EARN;AAAA;AAAA,QAQlCqB,WARkC;AAAA,QAQrBC,cARqB;;AAU1C,QAAMC,SAAS,GAAGrB,MAAM,CAACsB,GAAI;;iBAEhBC,KAAK,IAAIA,KAAK,CAACpB,KAAM;;;;;KAFlC;;AASA,QAAMqB,4BAA4B,GAAIC,CAAD,IAAO;AACxC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAd,IAAAA,kBAAkB,CAACY,KAAD,CAAlB;AACH,GAHD,CAnB0C,CAwB1C;AACA;AACA;AACA;;;AAEA,QAAMG,sBAAsB,GAAIJ,CAAD,IAAO;AAClC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAZ,IAAAA,YAAY,CAACU,KAAD,CAAZ;AACH,GAHD;;AAKA,QAAMI,uBAAuB,GAAIL,CAAD,IAAO;AACnC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACApB,IAAAA,aAAa,CAACkB,KAAD,CAAb;AACH,GAHD;;AAKA,QAAMK,oBAAoB,GAAIN,CAAD,IAAO;AAChC,UAAMO,IAAI,GAAGP,CAAC,CAACE,MAAF,CAASC,KAAtB;AACAlB,IAAAA,UAAU,CAACsB,IAAD,CAAV;AACH,GAHD;;AAKA,QAAMC,kBAAkB,GAAIR,CAAD,IAAO;AAC9B,UAAMpB,KAAK,GAAGoB,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAtB,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAHD;;AAKA,QAAM6B,6BAA6B,GAAIT,CAAD,IAAO;AACzC,UAAMG,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAhB,IAAAA,mBAAmB,CAACuB,QAAQ,CAACP,KAAD,CAAT,CAAnB;AACH,GAHD;;AAKA,QAAMQ,wBAAwB,GAAIX,CAAD,IAAO;AACpC,UAAMG,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAR,IAAAA,cAAc,CAACe,QAAQ,CAACP,KAAD,CAAT,CAAd;AACH,GAHD;;AAKA,QAAMS,wBAAwB,GAAIZ,CAAD,IAAO;AACpC,UAAMG,KAAK,GAAGH,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAV,IAAAA,cAAc,CAACiB,QAAQ,CAACP,KAAD,CAAT,CAAd;AACH,GAHD;;AAKA,SACI,0CACI,oBAAC,QAAD;AACI,IAAA,MAAM,EAAE1B,MADZ;AAEI,IAAA,KAAK,EAAEG,KAFX;AAGI,IAAA,OAAO,EAAEI,OAAO,IAAI,EAHxB;AAII,IAAA,WAAW,EAAEQ,WAAW,IAAI,EAJhC;AAKI,IAAA,WAAW,EAAEE,WAAW,IAAI,GALhC;AAMI,IAAA,KAAK,EAAEhB,KANX;AAOI,IAAA,eAAe,EAAEC,SAPrB;AAQI,IAAA,gBAAgB,EAAEO,gBAAgB,IAAI,EAR1C;AASI,IAAA,eAAe,EAAEE,eAAe,IAAI,QATxC;AAUI,IAAA,SAAS,EAAEE,SAAS,IAAI,QAV5B;AAWI,IAAA,WAAW,EAAER,WAAW,IAAI,QAXhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEJ,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,KAAK,EAAGE,KAA/C;AACI,IAAA,QAAQ,EAAG4B,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE9B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,WAA/B;AAA2C,IAAA,KAAK,EAAGU,eAAnD;AACI,IAAA,QAAQ,EAAGW,4BADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,EAWI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAErB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,WAA/B;AAA2C,IAAA,KAAK,EAAGY,SAAnD;AACI,IAAA,QAAQ,EAAGc,sBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAXJ,EAgBI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE1B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,WAA/B;AAA2C,IAAA,KAAK,EAAGI,WAAnD;AACI,IAAA,QAAQ,EAAGuB,uBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAhBJ,EAqBI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE3B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,aAAjC;AAA+C,IAAA,KAAK,EAAGM,OAAvD;AACI,IAAA,QAAQ,EAAGsB,oBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CArBJ,EA0BI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE5B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,aAAjC;AAA+C,IAAA,KAAK,EAAGQ,gBAAvD;AACI,IAAA,QAAQ,EAAGuB,6BADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA1BJ,EA+BI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE/B,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,aAAjC;AAA+C,IAAA,KAAK,EAAGgB,WAAvD;AACI,IAAA,QAAQ,EAAGiB,wBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CA/BJ,EAoCI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEjC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,aAAjC;AAA+C,IAAA,KAAK,EAAGc,WAAvD;AACI,IAAA,QAAQ,EAAGoB,wBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CApCJ,CAbJ,CADJ;AA0DH,CA1HD;;AA4HA,eAAepC,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport PieChart from '../components/PieChart';\nimport styled from '@emotion/styled';\n\nconst Pie = ({ fields, width, charCount }) => {\n    const [ title, setTitle ] = useState();\n    const [ slicesColor, setSliceColor ] = useState();\n    const [ padding, setPadding ] = useState();\n    const [ sectionRoundness, setSectionRoundness ] = useState();\n    const [ backgroundColor, setBackgroundColor ] = useState();\n    const [ textColor, setTextColor ] = useState();\n    const [ innerRadius, setInnerRadius ] = useState();\n    const [ outerRadius, setOuterRadius ] = useState();\n\n    const StyledRow = styled.div`\n        margin: auto;\n        width: ${props => props.width}px;\n        display: flex;\n        flex-direction: column;\n        align-items: space-between;\n        padding: 1rem;\n    `;  \n\n    const backgroundColorChangeHandler = (e) => {\n        const color = e.target.value;\n        setBackgroundColor(color)\n    }\n    \n    // if (color.length === 6) {\n    //         console.log('setting', color)\n    //         setTextColor(e.target.value)\n    //     }\n\n    const textColorChangeHandler = (e) => {\n        const color = e.target.value;\n        setTextColor(color)\n    }\n\n    const sliceColorChangeHandler = (e) => {\n        const color = e.target.value;\n        setSliceColor(color)\n    }\n\n    const paddingChangeHandler = (e) => {\n        const padd = e.target.value;\n        setPadding(padd)\n    }\n\n    const titleChangeHandler = (e) => {\n        const title = e.target.value;\n        setTitle(title)\n    }\n\n    const sectionRoundnessChangeHandler = (e) => {\n        const value = e.target.value;\n        setSectionRoundness(parseInt(value))\n    }\n\n    const outerRadiusChangeHandler = (e) => {\n        const value = e.target.value;\n        setOuterRadius(parseInt(value))\n    }\n\n    const innerRadiusChangeHandler = (e) => {\n        const value = e.target.value;\n        setInnerRadius(parseInt(value))\n    }\n\n    return(\n        <>\n            <PieChart                 \n                fields={fields}\n                title={title}\n                padding={padding || 25}\n                innerRadius={innerRadius || 50}\n                outerRadius={outerRadius || 100}\n                width={width}\n                labelCharLength={charCount}\n                sectionRoundness={sectionRoundness || 20}\n                backgroundColor={backgroundColor || '000000'}\n                textColor={textColor || 'FA8072'}\n                slicesColor={slicesColor || 'FA8072'}/>\n            <div>\n                <StyledRow width={width}>\n                    <h5>Header</h5>\n                    <input type=\"text\" placeholder=\"Title\" value={ title }\n                        onChange={ titleChangeHandler }/>\n                </StyledRow>\n                <StyledRow width={width}>\n                    <h5>Chart background color</h5>\n                    <input type=\"text\" placeholder=\"Hex value\" value={ backgroundColor }\n                        onChange={ backgroundColorChangeHandler }/>\n                </StyledRow>\n                <StyledRow width={width}>\n                    <h5>Text color</h5>\n                    <input type=\"text\" placeholder=\"Hex value\" value={ textColor }\n                        onChange={ textColorChangeHandler }/>\n                </StyledRow>\n                <StyledRow width={width}>\n                    <h5>Slice colors</h5>\n                    <input type=\"text\" placeholder=\"Hex value\" value={ slicesColor }\n                        onChange={ sliceColorChangeHandler }/>\n                </StyledRow>\n                <StyledRow width={width}>\n                    <h5>Padding between slices</h5>\n                    <input type=\"number\" placeholder=\"Pixel value\" value={ padding }\n                        onChange={ paddingChangeHandler }/>\n                </StyledRow>\n                <StyledRow width={width}>\n                    <h5>Section roundness</h5>\n                    <input type=\"number\" placeholder=\"Pixel value\" value={ sectionRoundness }\n                        onChange={ sectionRoundnessChangeHandler }/>\n                </StyledRow>\n                <StyledRow width={width}>\n                    <h5>Circle outer radius size</h5>\n                    <input type=\"number\" placeholder=\"Pixel value\" value={ outerRadius }\n                        onChange={ outerRadiusChangeHandler }/>\n                </StyledRow>\n                <StyledRow width={width}>\n                    <h5>Inner circle radius</h5>\n                    <input type=\"number\" placeholder=\"Pixel value\" value={ innerRadius }\n                        onChange={ innerRadiusChangeHandler }/>\n                </StyledRow>\n            </div>\n        </>\n    );\n}\n\nexport default Pie;"]},"metadata":{},"sourceType":"module"}