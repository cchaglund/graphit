{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/GraphOverview.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Rectangle from '../components/Rectangle';\nimport Graph from '../components/Graph';\nimport styled from '@emotion/styled';\nconst winWidth = window.innerWidth;\nconst width = winWidth * 0.75; // var winHeight = window.innerHeight;\n\nconst StyledRow = styled.div`\n    margin: auto;\n    width: ${width}px;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    padding: 1rem;\n`;\n\nconst GraphOverview = ({\n  location\n}) => {\n  // const [ expandedState, setExpandedState ] = useState(false);\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        barsColor = _useState4[0],\n        setBarsColor = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        padding = _useState6[0],\n        setPadding = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        backgroundColor = _useState8[0],\n        setBackgroundColor = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        textColor = _useState10[0],\n        setTextColor = _useState10[1];\n\n  const _useState11 = useState('lol'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        labelState = _useState12[0],\n        setLabelState = _useState12[1];\n\n  const _useState13 = useState('lil'),\n        _useState14 = _slicedToArray(_useState13, 2),\n        valueState = _useState14[0],\n        setValueState = _useState14[1]; // const [ , set ] = useState();\n  // const [ , set ] = useState();\n  // const [ , set ] = useState();\n\n\n  const fields = location.state;\n\n  const backgroundColorChangeHandler = e => {\n    const color = e.target.value;\n    setBackgroundColor(e.target.value);\n  }; // if (color.length === 6) {\n  //         console.log('setting', color)\n  //         setTextColor(e.target.value)\n  //     }\n\n\n  const textColorChangeHandler = e => {\n    const color = e.target.value;\n    setTextColor(color);\n  };\n\n  const barsColorChangeHandler = e => {\n    const color = e.target.value;\n    setBarsColor(color);\n  };\n\n  const paddingChangeHandler = e => {\n    const padd = e.target.value;\n    setPadding(parseInt(padd));\n  }; // useEffect( () => {\n  //     setState\n  // }, [])\n\n\n  return React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Graph Overview\"), React.createElement(Graph, {\n    fields: fields,\n    title: title,\n    padding: padding,\n    width: width,\n    backgroundColor: backgroundColor || '000000',\n    textColor: textColor || 'FA8072',\n    barsColor: barsColor || 'FA8072',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Graph background color\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Hex value\",\n    value: backgroundColor,\n    onChange: backgroundColorChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Text color\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Hex value\",\n    value: textColor,\n    onChange: textColorChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Bar colors\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Hex value\",\n    value: barsColor,\n    onChange: barsColorChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })), React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"Padding between bars\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Pixel value\",\n    value: padding,\n    onChange: paddingChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(GraphOverview);","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/GraphOverview.jsx"],"names":["React","useState","useEffect","withRouter","Rectangle","Graph","styled","winWidth","window","innerWidth","width","StyledRow","div","GraphOverview","location","title","setTitle","barsColor","setBarsColor","padding","setPadding","backgroundColor","setBackgroundColor","textColor","setTextColor","labelState","setLabelState","valueState","setValueState","fields","state","backgroundColorChangeHandler","e","color","target","value","textColorChangeHandler","barsColorChangeHandler","paddingChangeHandler","padd","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport Rectangle from '../components/Rectangle';\nimport Graph from '../components/Graph';\nimport styled from '@emotion/styled';\n\nconst winWidth = window.innerWidth;\nconst width = winWidth * 0.75;\n// var winHeight = window.innerHeight;\n\nconst StyledRow = styled.div`\n    margin: auto;\n    width: ${ width}px;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    padding: 1rem;\n`;\n\nconst GraphOverview = ({ location }) => {\n    // const [ expandedState, setExpandedState ] = useState(false);\n    const [ title, setTitle ] = useState();\n    const [ barsColor, setBarsColor ] = useState();\n    const [ padding, setPadding ] = useState();\n    const [ backgroundColor, setBackgroundColor ] = useState();\n    const [ textColor, setTextColor ] = useState();\n\n    const [ labelState, setLabelState ] = useState('lol');\n    const [ valueState, setValueState ] = useState('lil');\n    // const [ , set ] = useState();\n    // const [ , set ] = useState();\n    // const [ , set ] = useState();\n\n\n    const fields = location.state\n\n    const backgroundColorChangeHandler = (e) => {\n        const color = e.target.value;\n\n        setBackgroundColor(e.target.value)\n    }\n    // if (color.length === 6) {\n    //         console.log('setting', color)\n    //         setTextColor(e.target.value)\n    //     }\n\n    const textColorChangeHandler = (e) => {\n        const color = e.target.value;\n\n        setTextColor(color)\n    }\n\n    const barsColorChangeHandler = (e) => {\n        const color = e.target.value;\n\n        setBarsColor(color)\n    }\n\n    const paddingChangeHandler = (e) => {\n        const padd = e.target.value;\n\n        setPadding(parseInt(padd))\n    }\n\n    // useEffect( () => {\n    //     setState\n    // }, [])\n\n    return (\n        <StyledRow>\n            <h3>Graph Overview</h3>\n            {/* { \n                state ? Object.keys(state).map( field => {\n                    return <div key={field}>\n                    <p>{field}</p>\n                    <p>{state[field].value}</p>\n                    </div>\n                }) : null\n            } */}\n            <Graph \n                fields={fields}\n                title={title}\n                padding={padding}\n                width={width}\n                backgroundColor={backgroundColor || '000000'}\n                textColor={textColor || 'FA8072'}\n                barsColor={barsColor || 'FA8072'}/>\n            {/* <Rectangle\n                show={ true }\n                width={ winWidth }\n                height={ true ? 200 : 0 } /> */}\n            <div>\n                <StyledRow>\n                    <h5>Graph background color</h5>\n                    <input type=\"text\" placeholder=\"Hex value\" value={ backgroundColor }\n                        onChange={ backgroundColorChangeHandler }/>\n                </StyledRow>\n                <StyledRow>\n                    <h5>Text color</h5>\n                    <input type=\"text\" placeholder=\"Hex value\" value={ textColor }\n                        onChange={ textColorChangeHandler }/>\n                </StyledRow>\n                <StyledRow>\n                    <h5>Bar colors</h5>\n                    <input type=\"text\" placeholder=\"Hex value\" value={ barsColor }\n                        onChange={ barsColorChangeHandler }/>\n                </StyledRow>\n                <StyledRow>\n                    <h5>Padding between bars</h5>\n                    <input type=\"text\" placeholder=\"Pixel value\" value={ padding }\n                        onChange={ paddingChangeHandler }/>\n                </StyledRow>\n            </div>\n        </StyledRow>\n    )\n}\n\nexport default withRouter(GraphOverview);"]},"metadata":{},"sourceType":"module"}