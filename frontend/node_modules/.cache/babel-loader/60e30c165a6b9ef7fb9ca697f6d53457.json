{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/GraphOverview.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport Rectangle from '../components/Rectangle';\nimport Graph from '../components/Graph';\nimport styled from '@emotion/styled';\nconst winWidth = window.innerWidth;\nconst width = winWidth * 0.75; // var winHeight = window.innerHeight;\n\nconst StyledRow = styled.div`\n    margin: auto;\n    width: ${width}px;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    padding: 1rem;\n`;\n\nconst GraphOverview = ({\n  location\n}) => {\n  // const [ expandedState, setExpandedState ] = useState(false);\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        title = _useState2[0],\n        setTitle = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        barColors = _useState4[0],\n        setBarColors = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        padding = _useState6[0],\n        setPadding = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        backgroundColor = _useState8[0],\n        setBackgroundColor = _useState8[1];\n\n  const _useState9 = useState('lol'),\n        _useState10 = _slicedToArray(_useState9, 2),\n        labelState = _useState10[0],\n        setLabelState = _useState10[1];\n\n  const _useState11 = useState('lil'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        valueState = _useState12[0],\n        setValueState = _useState12[1]; // const [ , set ] = useState();\n  // const [ , set ] = useState();\n  // const [ , set ] = useState();\n\n\n  const fields = location.state;\n\n  const backgroundColorChangeHandler = e => {\n    const color = e.target.value;\n\n    if (color.length === 6) {\n      setBackgroundColor(e.target.value);\n    }\n  };\n\n  const valueChangeHandler = e => {\n    console.log(e.target.value);\n    setValueState(e.target.value);\n  }; // useEffect( () => {\n  //     setState\n  // }, [])\n\n\n  return React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Graph Overview\"), React.createElement(Graph, {\n    fields: fields,\n    title: title,\n    barColors: barColors,\n    padding: padding,\n    width: width,\n    backgroundColor: backgroundColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Graph background color\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Label\",\n    value: backgroundColor,\n    onChange: backgroundColorChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))));\n};\n\nexport default withRouter(GraphOverview);","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/views/GraphOverview.jsx"],"names":["React","useState","useEffect","withRouter","Rectangle","Graph","styled","winWidth","window","innerWidth","width","StyledRow","div","GraphOverview","location","title","setTitle","barColors","setBarColors","padding","setPadding","backgroundColor","setBackgroundColor","labelState","setLabelState","valueState","setValueState","fields","state","backgroundColorChangeHandler","e","color","target","value","length","valueChangeHandler","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAxB;AACA,MAAMC,KAAK,GAAGH,QAAQ,GAAG,IAAzB,C,CACA;;AAEA,MAAMI,SAAS,GAAGL,MAAM,CAACM,GAAI;;aAEfF,KAAM;;;;;CAFpB;;AASA,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACpC;AADoC,oBAERb,QAAQ,EAFA;AAAA;AAAA,QAE5Bc,KAF4B;AAAA,QAErBC,QAFqB;;AAAA,qBAGAf,QAAQ,EAHR;AAAA;AAAA,QAG5BgB,SAH4B;AAAA,QAGjBC,YAHiB;;AAAA,qBAIJjB,QAAQ,EAJJ;AAAA;AAAA,QAI5BkB,OAJ4B;AAAA,QAInBC,UAJmB;;AAAA,qBAKYnB,QAAQ,EALpB;AAAA;AAAA,QAK5BoB,eAL4B;AAAA,QAKXC,kBALW;;AAAA,qBAOErB,QAAQ,CAAC,KAAD,CAPV;AAAA;AAAA,QAO5BsB,UAP4B;AAAA,QAOhBC,aAPgB;;AAAA,sBAQEvB,QAAQ,CAAC,KAAD,CARV;AAAA;AAAA,QAQ5BwB,UAR4B;AAAA,QAQhBC,aARgB,mBASpC;AACA;AACA;;;AAGA,QAAMC,MAAM,GAAGb,QAAQ,CAACc,KAAxB;;AAEA,QAAMC,4BAA4B,GAAIC,CAAD,IAAO;AACxC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;;AAEA,QAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB;AACpBZ,MAAAA,kBAAkB,CAACQ,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB;AACH;AACJ,GAND;;AAQA,QAAME,kBAAkB,GAAIL,CAAD,IAAO;AAC9BM,IAAAA,OAAO,CAACC,GAAR,CAAYP,CAAC,CAACE,MAAF,CAASC,KAArB;AACAP,IAAAA,aAAa,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAb;AACH,GAHD,CAxBoC,CA6BpC;AACA;AACA;;;AAEA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAUI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEN,MADZ;AAEI,IAAA,KAAK,EAAEZ,KAFX;AAGI,IAAA,SAAS,EAAEE,SAHf;AAII,IAAA,OAAO,EAAEE,OAJb;AAKI,IAAA,KAAK,EAAET,KALX;AAMI,IAAA,eAAe,EAAEW,eANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,KAAK,EAAGA,eAA/C;AACI,IAAA,QAAQ,EAAGQ,4BADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CArBJ,CADJ;AAiCH,CAlED;;AAoEA,eAAe1B,UAAU,CAACU,aAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport Rectangle from '../components/Rectangle';\nimport Graph from '../components/Graph';\nimport styled from '@emotion/styled';\n\nconst winWidth = window.innerWidth;\nconst width = winWidth * 0.75;\n// var winHeight = window.innerHeight;\n\nconst StyledRow = styled.div`\n    margin: auto;\n    width: ${ width}px;\n    display: flex;\n    flex-direction: column;\n    align-items: space-between;\n    padding: 1rem;\n`;\n\nconst GraphOverview = ({ location }) => {\n    // const [ expandedState, setExpandedState ] = useState(false);\n    const [ title, setTitle ] = useState();\n    const [ barColors, setBarColors ] = useState();\n    const [ padding, setPadding ] = useState();\n    const [ backgroundColor, setBackgroundColor ] = useState();\n\n    const [ labelState, setLabelState ] = useState('lol');\n    const [ valueState, setValueState ] = useState('lil');\n    // const [ , set ] = useState();\n    // const [ , set ] = useState();\n    // const [ , set ] = useState();\n\n\n    const fields = location.state\n\n    const backgroundColorChangeHandler = (e) => {\n        const color = e.target.value;\n\n        if (color.length === 6) {\n            setBackgroundColor(e.target.value)\n        }\n    }\n\n    const valueChangeHandler = (e) => {\n        console.log(e.target.value)\n        setValueState(e.target.value)\n    }\n\n    // useEffect( () => {\n    //     setState\n    // }, [])\n\n    return (\n        <StyledRow>\n            <h3>Graph Overview</h3>\n            {/* { \n                state ? Object.keys(state).map( field => {\n                    return <div key={field}>\n                    <p>{field}</p>\n                    <p>{state[field].value}</p>\n                    </div>\n                }) : null\n            } */}\n            <Graph \n                fields={fields}\n                title={title}\n                barColors={barColors}\n                padding={padding}\n                width={width}\n                backgroundColor={backgroundColor}/>\n            {/* <Rectangle\n                show={ true }\n                width={ winWidth }\n                height={ true ? 200 : 0 } /> */}\n            <div>\n                <StyledRow>\n                    <h5>Graph background color</h5>\n                    <input type=\"text\" placeholder=\"Label\" value={ backgroundColor }\n                        onChange={ backgroundColorChangeHandler }/>\n                    {/* <button\n                        onClick={ () => setBackgroundColor() }>Set</button> */}\n                </StyledRow>\n            </div>\n        </StyledRow>\n    )\n}\n\nexport default withRouter(GraphOverview);"]},"metadata":{},"sourceType":"module"}