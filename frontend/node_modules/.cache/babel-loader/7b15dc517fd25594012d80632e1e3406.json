{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/DataEntryMethod.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from \"d3\"; // import { Link } from \"react-router-dom\";\n\nimport Rectangle from './Rectangle';\nvar winWidth = window.innerWidth;\nvar winHeight = window.innerHeight;\nconst StyledDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 1rem 0.5rem;\n`;\nconst StyledSvg = styled.svg`\n    display: block;\n`;\n\nconst DataEntryMethod = ({\n  name\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        expandedState = _useState2[0],\n        setExpandedState = _useState2[1];\n\n  const svgRef = React.createRef();\n  useEffect(() => {// let section = d3.select(secRef.current);\n    // section.transition()\n    //     .duration(1000)\n    //     .ease(d3.easeBackInOut)\n    //     .attr('x', 200)\n  }, []); // const toggleExpand = () => {\n  //     // expandedState ? contractSvg() : expandSvg();\n  //     let svg = d3.select(svgRef.current);\n  //     svg.transition()\n  //         .duration(300)\n  //         .ease(d3.easeBackInOut)\n  //         .attr('height', expandedState ? 0 : 200)\n  //     let section = d3.select(secRef.current);\n  //     section.transition()\n  //         .duration(300)\n  //         .ease(d3.easeBackInOut)\n  //         .attr('height', expandedState ? 0 : 200)\n  //     setExpandedState(!expandedState)\n  // }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(StyledDiv, {\n    onClick: () => setExpandedState(!expandedState),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, name), React.createElement(Rectangle, {\n    width: winWidth,\n    height: expandedState ? 200 : 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default DataEntryMethod;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/DataEntryMethod.jsx"],"names":["React","useState","useEffect","styled","d3","Rectangle","winWidth","window","innerWidth","winHeight","innerHeight","StyledDiv","div","StyledSvg","svg","DataEntryMethod","name","expandedState","setExpandedState","svgRef","createRef"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAIC,QAAQ,GAAGC,MAAM,CAACC,UAAtB;AACA,IAAIC,SAAS,GAAGF,MAAM,CAACG,WAAvB;AAEA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;;;;CAA7B;AAMA,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAI;;CAA7B;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,oBACUf,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,QAC1BgB,aAD0B;AAAA,QACXC,gBADW;;AAGlC,QAAMC,MAAM,GAAGnB,KAAK,CAACoB,SAAN,EAAf;AAGAlB,EAAAA,SAAS,CAAC,MAAM,CACZ;AAEA;AACA;AACA;AACA;AAEH,GARQ,EAQN,EARM,CAAT,CANkC,CAgBlC;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAG,MAAMgB,gBAAgB,CAAC,CAACD,aAAF,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IADL,CADJ,EAKQ,oBAAC,SAAD;AACI,IAAA,KAAK,EAAGV,QADZ;AAEI,IAAA,MAAM,EAAGW,aAAa,GAAG,GAAH,GAAS,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CADJ;AAYH,CA/CD;;AAiDA,eAAeF,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from \"d3\";\n// import { Link } from \"react-router-dom\";\nimport Rectangle from './Rectangle'\n\nvar winWidth = window.innerWidth;\nvar winHeight = window.innerHeight;\n\nconst StyledDiv = styled.div`\n    display: flex;\n    justify-content: center;\n    padding: 1rem 0.5rem;\n`;\n\nconst StyledSvg = styled.svg`\n    display: block;\n`;\n\nconst DataEntryMethod = ({ name }) => {\n    const [ expandedState, setExpandedState ] = useState(false);\n\n    const svgRef = React.createRef();\n    \n\n    useEffect(() => {\n        // let section = d3.select(secRef.current);\n\n        // section.transition()\n        //     .duration(1000)\n        //     .ease(d3.easeBackInOut)\n        //     .attr('x', 200)\n\n    }, [])\n\n    // const toggleExpand = () => {\n    //     // expandedState ? contractSvg() : expandSvg();\n    //     let svg = d3.select(svgRef.current);\n\n    //     svg.transition()\n    //         .duration(300)\n    //         .ease(d3.easeBackInOut)\n    //         .attr('height', expandedState ? 0 : 200)\n\n    //     let section = d3.select(secRef.current);\n\n    //     section.transition()\n    //         .duration(300)\n    //         .ease(d3.easeBackInOut)\n    //         .attr('height', expandedState ? 0 : 200)\n\n    //     setExpandedState(!expandedState)\n    // }\n\n    return(\n        <div>\n            <StyledDiv onClick={ () => setExpandedState(!expandedState) }>\n                {name}\n            </StyledDiv>\n            {/* <StyledSvg width={winWidth} height={ expandedState ? 200 : 0 } ref={svgRef}> */}\n                <Rectangle \n                    width={ winWidth }\n                    height={ expandedState ? 200 : 0 }/>\n            {/* </StyledSvg> */}\n        </div>\n    )\n}\n\nexport default DataEntryMethod;"]},"metadata":{},"sourceType":"module"}