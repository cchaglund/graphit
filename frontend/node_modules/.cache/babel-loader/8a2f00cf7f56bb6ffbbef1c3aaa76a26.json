{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/frontend/src/components/Manual/InputRow.jsx\";\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nconst StyledRow = styled.div`\n    width: 27rem;\n    display: flex;\n    justify-content: space-between;\n    padding: 1rem;\n`;\n\nconst InputRow = ({\n  saveFields,\n  label,\n  value\n}) => {\n  const _useState = useState(label),\n        _useState2 = _slicedToArray(_useState, 2),\n        labelState = _useState2[0],\n        setLabelState = _useState2[1];\n\n  const _useState3 = useState(value),\n        _useState4 = _slicedToArray(_useState3, 2),\n        valueState = _useState4[0],\n        setValueState = _useState4[1];\n\n  const labelChangeHandler = e => {\n    console.log(e.target.value);\n    setLabelState(e.target.value);\n  };\n\n  const valueChangeHandler = e => {\n    console.log(e.target.value);\n    setValueState(e.target.value);\n  };\n\n  return React.createElement(StyledRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Label\",\n    value: labelState,\n    onChange: labelChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Value\",\n    value: valueState,\n    onChange: valueChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => saveFields(labelState, valueState),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Add this data\"));\n};\n\nexport default InputRow;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/frontend/src/components/Manual/InputRow.jsx"],"names":["React","useState","styled","StyledRow","div","InputRow","saveFields","label","value","labelState","setLabelState","valueState","setValueState","labelChangeHandler","e","console","log","target","valueChangeHandler"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;;;;;CAA7B;;AAOA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAD,KAAkC;AAAA,oBACTP,QAAQ,CAACM,KAAD,CADC;AAAA;AAAA,QACvCE,UADuC;AAAA,QAC3BC,aAD2B;;AAAA,qBAETT,QAAQ,CAACO,KAAD,CAFC;AAAA;AAAA,QAEvCG,UAFuC;AAAA,QAE3BC,aAF2B;;AAI/C,QAAMC,kBAAkB,GAAIC,CAAD,IAAO;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAAST,KAArB;AACAE,IAAAA,aAAa,CAACI,CAAC,CAACG,MAAF,CAAST,KAAV,CAAb;AACH,GAHD;;AAKA,QAAMU,kBAAkB,GAAIJ,CAAD,IAAO;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAAST,KAArB;AACAI,IAAAA,aAAa,CAACE,CAAC,CAACG,MAAF,CAAST,KAAV,CAAb;AACH,GAHD;;AAKA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,KAAK,EAAGC,UAA/C;AACI,IAAA,QAAQ,EAAGI,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAuC,IAAA,KAAK,EAAGF,UAA/C;AACI,IAAA,QAAQ,EAAGO,kBADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAKI;AACI,IAAA,OAAO,EAAG,MAAMZ,UAAU,CAAEG,UAAF,EAAcE,UAAd,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,CADJ;AAUH,CAxBD;;AA0BA,eAAeN,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledRow = styled.div`\n    width: 27rem;\n    display: flex;\n    justify-content: space-between;\n    padding: 1rem;\n`;\n\nconst InputRow = ({ saveFields, label, value }) => {\n    const [ labelState, setLabelState ] = useState(label);\n    const [ valueState, setValueState ] = useState(value);\n\n    const labelChangeHandler = (e) => {\n        console.log(e.target.value)\n        setLabelState(e.target.value)\n    }\n\n    const valueChangeHandler = (e) => {\n        console.log(e.target.value)\n        setValueState(e.target.value)\n    }\n\n    return(\n        <StyledRow>\n            <input type=\"text\" placeholder=\"Label\" value={ labelState }\n                onChange={ labelChangeHandler }/>\n            <input type=\"text\" placeholder=\"Value\" value={ valueState }\n                onChange={ valueChangeHandler }/>\n            <button\n                onClick={ () => saveFields( labelState, valueState ) }>Add this data</button>\n        </StyledRow>\n    );\n}\n\nexport default InputRow;"]},"metadata":{},"sourceType":"module"}