{"ast":null,"code":"var _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/Graph.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport * as d3 from \"d3\";\nimport \"d3-selection-multi\";\n\nconst Graph = ({\n  fields\n}) => {\n  const svgRef = React.createRef();\n  const recRef = React.createRef();\n  const gRef = React.createRef(); // const [ height, setHeight ] = useState(props.height);\n\n  useEffect(() => {\n    let svg = d3.select(svgRef.current).style('display', 'block');\n    let g = d3.select(gRef.current);\n    console.log(fields);\n    g.selectAll('rect').data(Object.keys(fields), d => d).enter().append('rect').attrs({\n      x: 20,\n      y: (d, i) => 25 * i,\n      height: 20,\n      width: d => fields[d],\n      fill: 'blue'\n    });\n    g.selectAll('text').data(Object.keys(fields), d => d).enter().append('text').text(d => d).attrs({\n      x: 0,\n      y: (d, i) => 25 * i + 20,\n      height: 20\n    }); // svg.transition()\n    //     .duration(300)\n    //     .ease(d3.easeBackInOut)\n    //     .attr('height', props.height)\n    // let section = d3.select(recRef.current);\n    // section.transition()\n    //     .duration(300)\n    //     .ease(d3.easeBackInOut)\n    //     .attr('height', props.height)\n    //     .on(\"end\", () =>\n    //         setHeight(props.height)\n    //     );\n  });\n  return React.createElement(\"svg\", {\n    ref: svgRef,\n    width: 800,\n    height: 800,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    ref: gRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }));\n};\n\nexport default Graph;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/Graph.jsx"],"names":["React","useEffect","useState","d3","Graph","fields","svgRef","createRef","recRef","gRef","svg","select","current","style","g","console","log","selectAll","data","Object","keys","d","enter","append","attrs","x","y","i","height","width","fill","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,oBAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AACxB,QAAMC,MAAM,GAAGN,KAAK,CAACO,SAAN,EAAf;AACA,QAAMC,MAAM,GAAGR,KAAK,CAACO,SAAN,EAAf;AACA,QAAME,IAAI,GAAGT,KAAK,CAACO,SAAN,EAAb,CAHwB,CAKxB;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,GAAG,GAAGP,EAAE,CAACQ,MAAH,CAAUL,MAAM,CAACM,OAAjB,EACLC,KADK,CACC,SADD,EACY,OADZ,CAAV;AAGA,QAAIC,CAAC,GAAGX,EAAE,CAACQ,MAAH,CAAUF,IAAI,CAACG,OAAf,CAAR;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEAS,IAAAA,CAAC,CAACG,SAAF,CAAY,MAAZ,EACKC,IADL,CACUC,MAAM,CAACC,IAAP,CAAYf,MAAZ,CADV,EAC+BgB,CAAC,IAAIA,CADpC,EAEKC,KAFL,GAEaC,MAFb,CAEoB,MAFpB,EAGKC,KAHL,CAGW;AACHC,MAAAA,CAAC,EAAE,EADA;AAEHC,MAAAA,CAAC,EAAE,CAACL,CAAD,EAAIM,CAAJ,KAAU,KAAKA,CAFf;AAGHC,MAAAA,MAAM,EAAE,EAHL;AAIHC,MAAAA,KAAK,EAAER,CAAC,IAAIhB,MAAM,CAACgB,CAAD,CAJf;AAKHS,MAAAA,IAAI,EAAE;AALH,KAHX;AAWAhB,IAAAA,CAAC,CAACG,SAAF,CAAY,MAAZ,EACKC,IADL,CACUC,MAAM,CAACC,IAAP,CAAYf,MAAZ,CADV,EAC+BgB,CAAC,IAAIA,CADpC,EAEKC,KAFL,GAEaC,MAFb,CAEoB,MAFpB,EAGKQ,IAHL,CAGUV,CAAC,IAAIA,CAHf,EAIKG,KAJL,CAIW;AACHC,MAAAA,CAAC,EAAE,CADA;AAEHC,MAAAA,CAAC,EAAE,CAACL,CAAD,EAAIM,CAAJ,KAAW,KAAKA,CAAN,GAAW,EAFrB;AAGHC,MAAAA,MAAM,EAAE;AAHL,KAJX,EAnBY,CA6BZ;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA1CQ,CAAT;AA4CA,SACI;AAAK,IAAA,GAAG,EAAGtB,MAAX;AAAoB,IAAA,KAAK,EAAG,GAA5B;AAAkC,IAAA,MAAM,EAAE,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,GAAG,EAAGG,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH,CAhED;;AAkEA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport * as d3 from \"d3\";\nimport \"d3-selection-multi\";\n\nconst Graph = ({fields}) => {\n    const svgRef = React.createRef();\n    const recRef = React.createRef();\n    const gRef = React.createRef();\n\n    // const [ height, setHeight ] = useState(props.height);\n\n    useEffect(() => {\n        let svg = d3.select(svgRef.current)\n            .style('display', 'block')\n        \n        let g = d3.select(gRef.current)\n\n        console.log(fields)\n\n        g.selectAll('rect')\n            .data(Object.keys(fields), d => d)\n            .enter().append('rect')\n            .attrs({\n                x: 20,\n                y: (d, i) => 25 * i,\n                height: 20,\n                width: d => fields[d],\n                fill: 'blue'\n            })\n\n        g.selectAll('text')\n            .data(Object.keys(fields), d => d)\n            .enter().append('text')\n            .text(d => d)\n            .attrs({\n                x: 0,\n                y: (d, i) => (25 * i) + 20,\n                height: 20,\n            })\n\n        // svg.transition()\n        //     .duration(300)\n        //     .ease(d3.easeBackInOut)\n        //     .attr('height', props.height)\n\n        // let section = d3.select(recRef.current);\n        // section.transition()\n        //     .duration(300)\n        //     .ease(d3.easeBackInOut)\n        //     .attr('height', props.height)\n        //     .on(\"end\", () =>\n        //         setHeight(props.height)\n        //     );\n    })\n\n    return(\n        <svg ref={ svgRef } width={ 800 } height={800}>\n            <g ref={ gRef }>\n                {/* <rect\n                    ref={recRef}\n                    x={0} \n                    y={0} \n                    height={ height } \n                    width={ props.width } \n                    fill={'#575757'} /> */}\n            </g>\n        </svg>\n    )\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}