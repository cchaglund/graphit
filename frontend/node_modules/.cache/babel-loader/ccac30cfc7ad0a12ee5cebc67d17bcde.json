{"ast":null,"code":"import _slicedToArray from \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/Rectangle.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from \"d3\";\nconst StyledDiv = styled.div`\n    overflow: scroll;\n    background-color: #575757;\n    height: ${props => props.height};\n    display: ${props => props.show ? 'block' : 'none'};\n`;\n\nconst Rectangle = props => {\n  const svgRef = React.createRef();\n  const recRef = React.createRef();\n  const gRef = React.createRef();\n\n  const _useState = useState(props.height),\n        _useState2 = _slicedToArray(_useState, 2),\n        height = _useState2[0],\n        setHeight = _useState2[1];\n\n  useEffect(() => {\n    let svg = d3.select(svgRef.current).style('display', 'block');\n    let g = d3.select(gRef.current).append('text').text('hej').attr('y', 20);\n    svg.transition().duration(300).ease(d3.easeBackInOut).attr('height', props.height);\n    let section = d3.select(recRef.current);\n    section.transition().duration(300).ease(d3.easeBackInOut).attr('height', props.height).on(\"end\", () => setHeight(props.height));\n  });\n  return React.createElement(StyledDiv, {\n    height: props.height,\n    show: props.show,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"here be bunch o text\");\n};\n\nexport default Rectangle;","map":{"version":3,"sources":["/Users/christoferhaglund/Documents/Skola/assignments/graphit/src/components/Rectangle.jsx"],"names":["React","useEffect","useState","styled","d3","StyledDiv","div","props","height","show","Rectangle","svgRef","createRef","recRef","gRef","setHeight","svg","select","current","style","g","append","text","attr","transition","duration","ease","easeBackInOut","section","on"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;;;cAGdC,KAAK,IAAIA,KAAK,CAACC,MAAO;eACrBD,KAAK,IAAIA,KAAK,CAACE,IAAN,GAAa,OAAb,GAAuB,MAAO;CAJvD;;AAOA,MAAMC,SAAS,GAAIH,KAAD,IAAW;AACzB,QAAMI,MAAM,GAAGX,KAAK,CAACY,SAAN,EAAf;AACA,QAAMC,MAAM,GAAGb,KAAK,CAACY,SAAN,EAAf;AACA,QAAME,IAAI,GAAGd,KAAK,CAACY,SAAN,EAAb;;AAHyB,oBAKKV,QAAQ,CAACK,KAAK,CAACC,MAAP,CALb;AAAA;AAAA,QAKjBA,MALiB;AAAA,QAKTO,SALS;;AAOzBd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,GAAG,GAAGZ,EAAE,CAACa,MAAH,CAAUN,MAAM,CAACO,OAAjB,EACLC,KADK,CACC,SADD,EACY,OADZ,CAAV;AAGA,QAAIC,CAAC,GAAGhB,EAAE,CAACa,MAAH,CAAUH,IAAI,CAACI,OAAf,EACHG,MADG,CACI,MADJ,EAEHC,IAFG,CAEE,KAFF,EAGHC,IAHG,CAGE,GAHF,EAGO,EAHP,CAAR;AAKAP,IAAAA,GAAG,CAACQ,UAAJ,GACKC,QADL,CACc,GADd,EAEKC,IAFL,CAEUtB,EAAE,CAACuB,aAFb,EAGKJ,IAHL,CAGU,QAHV,EAGoBhB,KAAK,CAACC,MAH1B;AAKA,QAAIoB,OAAO,GAAGxB,EAAE,CAACa,MAAH,CAAUJ,MAAM,CAACK,OAAjB,CAAd;AACAU,IAAAA,OAAO,CAACJ,UAAR,GACKC,QADL,CACc,GADd,EAEKC,IAFL,CAEUtB,EAAE,CAACuB,aAFb,EAGKJ,IAHL,CAGU,QAHV,EAGoBhB,KAAK,CAACC,MAH1B,EAIKqB,EAJL,CAIQ,KAJR,EAIe,MACPd,SAAS,CAACR,KAAK,CAACC,MAAP,CALjB;AAOH,GAtBQ,CAAT;AAwBA,SACI,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAED,KAAK,CAACC,MAAzB;AAAiC,IAAA,IAAI,EAAGD,KAAK,CAACE,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ;AAeH,CA9CD;;AAgDA,eAAeC,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport * as d3 from \"d3\";\n\nconst StyledDiv = styled.div`\n    overflow: scroll;\n    background-color: #575757;\n    height: ${ props => props.height};\n    display: ${ props => props.show ? 'block' : 'none'};\n`;\n\nconst Rectangle = (props) => {\n    const svgRef = React.createRef();\n    const recRef = React.createRef();\n    const gRef = React.createRef();\n\n    const [ height, setHeight ] = useState(props.height);\n\n    useEffect(() => {\n        let svg = d3.select(svgRef.current)\n            .style('display', 'block')\n        \n        let g = d3.select(gRef.current)\n            .append('text')\n            .text('hej')\n            .attr('y', 20)\n\n        svg.transition()\n            .duration(300)\n            .ease(d3.easeBackInOut)\n            .attr('height', props.height)\n\n        let section = d3.select(recRef.current);\n        section.transition()\n            .duration(300)\n            .ease(d3.easeBackInOut)\n            .attr('height', props.height)\n            .on(\"end\", () =>\n                setHeight(props.height)\n            );\n    })\n\n    return(\n        <StyledDiv height={props.height} show={ props.show }>here be bunch o text\n            {/* <svg ref={ svgRef } width={ props.width }>\n                <g ref={ gRef }>\n                    <rect\n                        ref={recRef}\n                        x={0} \n                        y={0} \n                        height={ height } \n                        width={ props.width } \n                        fill={'#575757'} />\n                </g>\n            </svg> */}\n        </StyledDiv>\n    )\n}\n\nexport default Rectangle;"]},"metadata":{},"sourceType":"module"}